/*
 * Copyright (c) 2015 Tata Consultancy Service and others.  All rights reserved.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v1.0 which accompanies this distribution,
 * and is available at http://www.eclipse.org/legal/epl-v10.html
 */
module tsdr-snmp-data-collector {

    yang-version 1;
    namespace "urn:opendaylight:params:xml:ns:yang:controller:config:tsdr:snmp:data:collector";
    prefix "tsdr-snmp-data-collector";
    import ietf-inet-types {
        prefix inet;
        revision-date 2010-09-24;
    }
    import IF-MIB {
        prefix if-mib;
    }
    import config { prefix config; revision-date 2013-04-05; }
    import opendaylight-md-sal-binding { prefix mdsal; revision-date 2013-10-28; }
    contact
      "Prajaya Talwar <prajaya.talwar@tcs.com>";
    description
        "This module contains the base YANG definitions for
        tsdr-snmp-data-collector impl implementation.";

    revision "2015-10-13" {
        description
            "Initial revision.";
    }

    // This is the definition of the service implementation as a module identity.
    identity tsdr-snmp-data-collector {
            base config:module-type;
            config:java-name-prefix TSDRSnmpDataCollector;
    }

    container TSDRSnmpDataCollectorConfig{
       leaf polling-interval{
          type int64;
       }
     }

    typedef snmp-metric {
        type enumeration {
            //enum MTU; this is not a metric
            //enum ifSpeed; this is also not a metric but a const of interface speed
            enum ifInNUcastPkts;
            enum ifInDiscards;
            enum ifInErrors;
            enum ifInOctets;
            enum ifInUnknownProtos;
            enum ifInUcastPkts;
            enum ifOutQLen;
            enum ifOutNUcastPkts;
            enum ifOutErrors;
            enum ifOutDiscards;
            enum ifOutUcastPkts;
            enum ifOutOctets;
            //enum ifOperStatus; not a metric, the operation status of the interface up/down
            //enum ifAdminStatus; not a metric, the admin status of the interface up/down
        }
    }

    augment "/config:modules/config:module/config:configuration" {
                case tsdr-snmp-data-collector {
                    when "/config:modules/config:module/config:type = 'tsdr-snmp-data-collector'";
                    container data-broker {
                        uses config:service-ref {
                            refine type {
                                mandatory false;
                                config:required-identity mdsal:binding-async-data-broker;
                            }
                        }
                    }
                    container rpc-registry {
                        uses config:service-ref {
                            refine type {
                                mandatory true;
                                config:required-identity mdsal:binding-rpc-registry;
                            }
                        }
                    }
                }
            }

    rpc setPollingInterval  {
        description
          "set the polling interval of the collector";
        input {
            leaf interval {
              type int64;
              description "interval";
            }
        }
    }
}
